#include <iostream>
using namespace std;

class node{
    public: 
    int data;
    node* next;
  
  node(int data){
      this -> data = data;
      this -> next = NULL;
  }

};


//insertion at begginig
void insertAthead(node* &head, int d){
    // create new node
    node* temp = new node(d);
    temp->next = head;
    head = temp;
}

//insertion at end
void insertAtTail(node* &tail, int d){
    //create new node
   node* temp = new node(d);
   tail->next = temp;
   tail = tail->next;
}


//insert at any position
void insertAtanyposition(node* &head, node* &tail,int position, int d){
    //insert at start
    if(position == 1){
        insertAthead(head,d);
        return ;
    }

    node* temp = head;
    int count = 1;
    while(count < position - 1){
        temp = temp->next;
        count++;
    }
    node* nodetoinsert = new node(d);
    nodetoinsert->next = temp->next;
    temp->next = nodetoinsert;
}



//find middle 
node* Findmiddle(node* head){
    node *fast = head;
    node *slow = head;

    while(fast->next != NULL && fast->next->next != NULL){
        slow  = slow->next;
        fast = fast->next->next;
    }
    return slow;
}


//inseer at middle of LL

void insertATmiddle(node* &head, int d){
    node* nodetoinsert = new node(d);

    if(head == NULL){
        head = nodetoinsert;
        return;
    }

    node* temp = head;
    if(temp->next == NULL)
    {
        temp->next = nodetoinsert;
        return;
    }
  //find middle
  node*middle =Findmiddle(head);
  node* p1,*p2;
  p1 = middle;
  p2 = p1->next;

  p1->next = nodetoinsert;
  nodetoinsert = p2;

}


//print the linked-list
void print(node* &head){
    node* temp = head;

    while(temp != NULL){
        cout<<temp->data<<"->";
        temp = temp->next;
    }
    cout<<endl;
}


int main() {

node* node1 = new node(10);


node* head = node1;
node* tail = node1;
print(head);

insertAtTail(head,12);
print(head);

insertAtTail(head,10);
print(head);

insertAtanyposition(head,tail,2,11);
print(head);

insertAtanyposition(head,tail,1,9);
print(head);

insertAtanyposition(head,tail,2,8);
print(head);

insertATmiddle(head,3);
print(head);

insertATmiddle(head,2);
print(head);

}
